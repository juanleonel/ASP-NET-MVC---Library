@model Library.Web.Models.AuthorModelView

@{
    ViewBag.Title = "Create";
}
<div data-bind="visible: !saveCompleted()">
    <h2>Create</h2>
    @using (Html.BeginForm("Create", "Author", FormMethod.Post,
    new { data_bind = "submit: validateAndSave" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Author</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, htmlAttributes:
                new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes =
                    new { @class = "form-control",
                    data_bind = "value: author.firstName" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "",
                    new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastName, htmlAttributes:
                new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes =
                    new { @class = "form-control", data_bind = "value: author.lastName" } })
                    @Html.ValidationMessageFor(model => model.LastName, "",
                    new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Biography, htmlAttributes:
                new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Biography, new { htmlAttributes = new { @class = "form-control", data_bind = "value: author.biography" } })
                    @Html.ValidationMessageFor(model => model.Biography, "",
                    new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" data-bind="visible: !sending()">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
                <div class="progress" data-bind="visible: sending">
                    <div class="progress-bar progress-bar-info progress-bar-striped active"
                         role="progressbar" aria-valuenow="100"
                         aria-valuemin="0" aria-valuemax="100"
                         style="width: 100%">
                        <span class="sr-only"></span>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval",
    "/Scripts/ViewModels/AuthorFormViewModel.js");

    <script >

        $(document).ready(function () {

            /*

            function AuthorFormViewModel() {
                var self = this;

                self.saveCompleted = ko.observable(false);
                self.sending = ko.observable(false);


                self.author = {
                    firstName: ko.observable(),
                    lastName: ko.observable(),
                    biography: ko.observable()
                };
                console.log(self.author);

                self.validateAndSave = function (form) {
                    console.log("ok");
                    if (!$(form).valid())
                        return false;

                    self.sending(true);

                    // include the anti forgery token
                    self.author._RequestVerificationToken = form[0].value;

                    $.ajax({
                        url: 'Create',
                        type: 'post',
                        //contentType: 'application/x-www-form-urlencoded',
                        data: ko.toJS(self.author)
                    }).success(self.successfulSave)
                        .error(self.errorSave)
                        .complete(function () {
                            self.sending(false)
                        });
                };

                self.successfulSave = function () {
                    self.saveCompleted(true);
                    $('.body-content').prepend('<div class="alert alert-success"> <strong> Success!</strong> The new author has been saved.</div> ');

                    setTimeout(function () { location.href = './'; }, 1000);
                };
                self.errorSave = function () {
                    $('.body-content').prepend('<div class="alert alert-danger"><strong> Error!</strong> There was an error creating the author.</div> ');
                };
            }

            */


            var viewModel = new AuthorFormViewModel();
            ko.applyBindings(viewModel);

        });


    </script>
}
